** HTML5 VIDEO AND AUDIO ELEMENTS, FLASH IN HTML5 **

1. Flash is a very popular technology used to add animations, video, and audio to websites.

2. How FLASH Works?
   Since the late 1990s, Flash has been a very popular tool for creating animations, and later for playing audio and video in websites.
   Whether you are creating an animation or a media player in Flash, the files you put on your website are referred to as Flash movies.
   If you want to create your own Flash movie, you need to purchase the Flash authoring environment from Adobe.

3. When you create a Flash file in the Flash authoring environment, it is saved with the .fla file extension. 
   In order to use this file on a web page it has to be saved in a different format known as SWF. (It has the .swf file extension.)

   When you export the movie into SWF format, Flash creates code that you can use to embed the Flash movie in your page.
   Traditionally, this code used the HTML <object> and <embed> tags. However, now it is more common to use JavaScript.

   To view Flash, browsers need to use a plugin (an extra piece of software that runs in the browser) called the Flash Player.
   Statistics commonly indicate that 98% of browsers on desktop computers have the Flash plugin installed. 
   (The percentage of mobiles and tablets with it is much less.)

** ADDING A FLASH MOVIE TO YOUR WEB-PAGE **

1. The most popular way of adding Flash into a web page is using JavaScript. There are several scripts that allow you to do this without an in-depth
   understanding of the JavaScript language.

e.g.:

        <!DOCTYPE html>
        <html>
            <head>
            <title>Adding a Flash Movie</title>
            <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js"></script>
            <script type="text/javascript">swfobject.embedSWF("flash/bird.swf","bird", "400", "300", "8.0.0");</script>
            </head>
            <body>
            <div id="bird"><p>An animation of a bird taking a shower</p></div>
        </body>
        </html>
		
The type attribute is used on the <script> element to indicate that the script inside is written in JavaScript. 
The src attribute tells the browser where to find the script.
The second <script> element is used to tell the browser about the Flash movie, as well as which element it should replace. 
This element is actually telling the SWFObject script five pieces of information, which are in the brackets:

1. The location of the .swf file:flash/bird.swf 
2. The element that the Flash movie should replace, specified by the value of the id attribute on the <div> element: bird
3. The width of the Flash movie: 400 px 
4. The height of the Flash movie: 300 px
5. The minimum version of the Flash player needed to view the movie: Flash Player 8

** Understanding Video Formats and Players: **

To add video to your site, there are two key issues to understand: file formats and video players/plugins.

1. FORMATS          :  Movies are available in many formats (BluRay, DVD, VHS,to name a few). Online, there are even more video formats 
		              (including AVI, Flash Video, H264, MPEG, Ogg Theora, QuickTime, WebM, and Windows Media). Just as your DVD player won't
		               play a VHS cassette, browsers differ in what video formats they do and don't support. In order for users to view your
			           video online, you may need to convert it to another format. The process of converting a video into another format
			           is sometimes referred to as "encoding" the video. There are several apps available on the web that enable you to 
			           encode videos (such as www.mirovideoconverter.com).
			
2. PLAYERS/PLUGINS : Browsers were initially designed to show text and images only. For this reason, browsers built prior to 2010 generally required
                     another program called a player or plugin to to be installed in order to play video content. These players and plugins only
                     supported certain video formats.Recently browsers have evolved to support the HTML5 <video> tag (which renders players and
                     plugins obsolete).Unfortunately, however, you cannot rely on every visitor to your website having a recent browser that supports this
                     new HTML5 element and the browsers that do recognize the <video> element require the video to be encoded in different formats.
					 
3. APPROACH        : The easiest way to add video to your site is to use a hosted service such as YouTube or Vimeo. However, there are some cases
                     where using these services is not appropriate (as you will see on the next page) and you will want to host the video on your
                     own site. At the time of writing, to ensure most people can play your video content, it is considered best practice to use the HTML5
                     <video> element for browsers that support it, and also Flash video for those that do not.This means you would need to upload any videos 
					 you want to show in at least two different formats: WebM and MP4.
					 
** USING HOSTED VIDEO SERVICE **

1. ADVANTAGES      : Hosted video sites (such as YouTube) provide players that work with the majority of web browsers. You do not need to worry about
                     encoding your video since these sites allow you to upload your content in a range of formats. Once uploaded, they automatically 
					 convert your video into the various formats required by different browsers. Web hosting companies often charge extra if you use 
					 a lot of bandwidth, and video files can be quite large. Therefore, it can cost you extra to host the videos on your own site. 
					 If your video is hosted on a site like YouTube or Vimeo, however, you do not need to pay for the bandwidth.
					 
2. DISADVANATAGES  : Video will be available on the site of the hosted service, so if you want the content to be exclusively available on your site
                    (and not visible on other sites), you need to host the video on your own server and add your own player into the page.
                    Some services will limit what your video is allowed to include. For example, most prohibit the use of advertising within
                    the video you upload (which prevents you from monetizing that content).Some hosted services will play their own adverts before your
                    video will begin, or even overlay them over the screen as your video is playing. The quality of video on some hosted services
                    can also be limited.
					
** Preparig a Flash Video to your own site **

1. Convert your video into flv format       :  To play a Flash Video, you need to convert your video into FLV format. Since Flash 6, the Flash
                                               authoring environment has come with a Flash Video Encoder to convert videos into FLV format.
                                               Some Flash video players also support a format called H264 (and some video editing programs export 
										       video in this format). Googling "FLV or H264 converters" will allow you to find alternative encoding software.
										
2. Find an FLV Player to Play the Video     :  You'll need a player written in Flash to play the FLV file. Its purpose is to hold the FLV movie 
                                               and add controls such as play/pause. Here are two sites that offer FLV players:
										       1. www.osflv.com 
										       2. www.longtailvideo.com
										       You do not need the Flash authoring environment to use either of these on your website.
										  
3. Include the player and video in your page : You can include the player in your page using a JavaScript technique such as SWFObject,
                                               You will also need to tell the player where it can find the video file that you want it to play.
                                              (Some players have advanced features such as the ability to create playlists of multiple videos, or add a 
											   still picture before the video plays.)
											   

e.g.:
        <!DOCTYPE html>
            <html>
            <head>
            <title>Adding a Flash Video</title>
            <script type="text/javascript"
            src="http://ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js"></script>
            <script type="text/javascript">
            var flashvars = {};
            var params = {movie:"../video/puppy.flv"};
            swfobject.embedSWF("flash/splayer.swf","snow", "400", "320", "8.0.0",flashvars, params);
			</script>
            </head>
            <body>
            <div id="snow"><p>A video of a puppy playing in the snow</p></div>
            </body>
        </html>
		
Note: This example uses the OS FLV player to display a video called puppy.flv, which has already been convered into FLV format.

** HTML5: PREPARING VIDEO FOR YOUR PAGES **

Despite the HTML5 <video> element being a very recent addition, it is enjoying widespread use.
Here are some of the key issues to be aware of:

1. SUPPORT        :  The new HTML5 <video> element is only supported by recent browsers, so you cannot just use this one technique if you
				     want everyone to be able to see your video (you need to combine this HTML5 with Flash Video).
				     
2. FORMATS        :  Not all browsers support the same video formats. Therefore, you need to supply your video in more than one format.
                     To reach as many browsers as possible, you should provide the video in the following formats: 
                     1. H264: IE and Safari
				     2. WebM: Android, Chrome,Firefox, Opera Chrome, 
				     Firefox, and Opera have indicated that they will support a format called WebM. (Some Flash players also support H264,and WebM 
				     - which will save on the number of conversions).
			      
3. CONTROLS       :  The browser supplies its own controls for the player, and these can vary from browser to browser. 
                     You can control the appearance of these controls using JavaScript (Read/Refer JavaScript Notes).
				 
4. DIGITAL RIGHTS :  At the time of writing, the <video> element does not support any type of Digital Rights Management 
                    (DRM — sometimes referred to as copy protection). But a dedicated pirate will usually find a way around DRM.
					
5. IN THE BROWSER :  One of the problems with players such as the Flash Player is that they can behave inconsistently
                     when elements such as menus drop over them, or the window is scaled up or down. The HTML5 option solves these issues.
					 

** ADDING A VIDEO TO YOUR WEB PAGE **

1. HTML5 <video> Element: In HTML5 you do not need to supply values for all attributes, such as the controls, autoplay,and loop attributes used 
                          with the <video> element. These attributes are like on/off switches. If the attribute is present, it turns that option on.
                          If the attribute is omitted, the option is turned off.
					   
Attributes of HTML5 <video> element:

1. src                 : This attribute specifies the path to the video. (The example video is in H264 format so it will only work in IE and Safari.)
2. poster              : This attribute allows you to specify an image to show while the video is downloading or until the user tells the video to play.
3. width,height        : These attributes specify the size of the player in pixels.
4. controls            : When used, this attribute indicates that the browser should supply its own controls for playback.
5. preload             : This attribute tells the browser what to do when the page loads. It can have one of three values
                         1. none     : The browser should not load the video until the user presses play.
						 2. auto     : The browser should download the video when the page loads.
						 3. metadata : The browser should just collect information such as the size, first frame, track list, and duration.
6. autoplay            : When used, this attribute specifies that the file should play automatically.
7. loop                : When used, this attribute indicates that the video should start playing again once it has ended.


2. <source> element    : To specify the location of the file to be played, you can use the <source> element inside the <video> element. 
                        (This should replace the src attribute on the opening <video> tag.) You can also use multiple <source> elements 
						to specify that the video is available in different formats.
						
Attributes of the <source> tag:

1. src                 : This attribute specifies the path to the video.
2. type                : You should use this attribute to tell the browser what format the video is. 
                         Otherwise, it will download some of the video to see if it can play the file (which will take time and bandwidth).
3. codecs              : The codec that was used to encode the video is supplied within the type attribute. 
                         Note the use of single quotes, as well as double quotes in the type attribute, when it is supplied.
 
*** Combining the Flash and HTML5 video ***

Because some of the video players built in Flash support H264 encoding, if you use a player that supports this format you would only need to provide
the video in H264 and WebM formats. (You would not need it in FLV format as well.)

If you start to work with HTML5 video in depth, you can also: 
●● Create your own playback controls
●● Provide different versions of the video for browsers that have different sized screens (so you can provide lower resolution content for handheld devices)
●● Tell different parts of a page to change when the video reaches a certain point  


*** Adding a Audio to the Web Pages ***

By far the most popular format for putting audio on web pages is MP3. As with video, there are three routes commonly taken:

1. Use a Hosted Service : There are several sites that allow you to upload your audio, and provide a player which you can embed in your page, 
                          such as SoundCloud.com and MySpace.com.
						 
2. Use Flash            : There are several Flash movies that allow you to play MP3 files; from simple buttons that play one track to complex players
                          that allow you to create playlists and juke boxes.
						  
3. Use HTML5            : HTML5 has introduced a new <audio> element. Browsers that support has element provide their own controls. 
                          much as the video files we just looked at it.
						  

Some people ask how to get music to play consistently even when visitors move from one page to another on a website.
This is actually quite difficult to achieve and would rely on techniques like using AJAX to load page content or developing the entire site in Flash.
This is why some sites offer audio players in new windows, so that listeners are not interrupted when they move between pages.

The <audio> element in the HTML5 : The HTML5 introduced <audiio> element to include audio files in your pages. As with HTML5 video,browsers expect 
                                   different formats for the audio. The <audio> elements has the number of attributes which allow you control audio    
								   playback.
								   
The attributes of <audio> element

1. src       :  The attribute specifies the path to the audio file.
2. controls  :  This attribute indicates whether the player should display controls. If you do not use this attribute no controls will be shown by
                default. You can show your controls using javascript.
3. autoplay  :  The presence of this attribute indicates that audio should start playing automatically.
                (It is considered better practice to let visitors choose to play audio.) 
4. preload   :  This attribute indicates what the browser should do if the player is not set to autoplay. It can have the same values we saw on page
                214 for the <video> element.
5. loop      :  This attribute specifies that the audio track should play again once it has finished.

e.g.: 
<!DOCTYPE html>
<html>
<head>
<title>Adding HTML5 Audio</title>
</head>
<body>
<audio src="audio/test-audio.ogg" controls autoplay>
<p>This browser does not support our audio format.</p>
</audio>
</body>
</html>


*** MULTIPLE AUDIO SOURCES ***

1. <source> : It is possible to specify more than one audio file using the <source> element between the opening <audio> and closing </audio> tags 
             (instead of the src attribute on the opening <audio> tag). This is important because different browsers support different formats for audio files.
			 
The attributes of the <source> element.

1. src  : The <source> element uses the src attribute to indicate where the audio file is located.
2. type : At the time of writing, the type attribute was not commonly being used on the <source> element in the same way it was for the <video> element.

Note    : The HTML5 <audio> tag has not gained as widespread adoption as the <video> tag, and there have been some issues with audio quality in the first
          browsers to implement it.
		  
		  

	
				
				
				
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
				 
